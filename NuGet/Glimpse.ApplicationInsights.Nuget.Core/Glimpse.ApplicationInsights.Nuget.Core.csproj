<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\..\Glimpse.ApplicationInsights\bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <NuGetPackageImportStamp>dad8833d</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\..\Glimpse.ApplicationInsights\bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <PackageSpecFile>$(MSBuildProjectDirectory)\Glimpse.ApplicationInsights.nuspec</PackageSpecFile>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2E8AA54B-43AD-4093-AF35-2F8095CDAB14}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Glimpse.ApplicationInsights.Nuget.Core</RootNamespace>
    <AssemblyName>Glimpse.ApplicationInsights.Nuget.Core</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>61ec3c13</NuGetPackageImportStamp>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">.\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <PackageVersionFile>$(OutputPath)Glimpse.ApplicationInsights.dll</PackageVersionFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\Transformations\ApplicationInsights.config.install.xdt">
      <Link>Transformations\ApplicationInsights.config.install.xdt</Link>
      <SubType>Designer</SubType>
    </None>
    <None Include="..\Transformations\ApplicationInsights.config.transform">
      <Link>Transformations\ApplicationInsights.config.transform</Link>
    </None>
    <None Include="..\Transformations\ApplicationInsights.config.uninstall.xdt">
      <Link>Transformations\ApplicationInsights.config.uninstall.xdt</Link>
    </None>
    <None Include="ApplicationInsights.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Glimpse.ApplicationInsights.nuspec" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Glimpse.ApplicationInsights\Glimpse.ApplicationInsights.csproj">
      <Project>{a4e8a925-a40e-41be-a6f0-cb1798082f60}</Project>
      <Name>Glimpse.ApplicationInsights</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.AI.Agent.Intercept, Version=2.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.Agent.Intercept.2.0.7\lib\net45\Microsoft.AI.Agent.Intercept.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.AI.DependencyCollector, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.DependencyCollector.2.4.0-beta2\lib\net45\Microsoft.AI.DependencyCollector.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AI.PerfCounterCollector, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.PerfCounterCollector.2.4.0-beta2\lib\net45\Microsoft.AI.PerfCounterCollector.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AI.ServerTelemetryChannel, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.WindowsServer.TelemetryChannel.2.4.0-beta2\lib\net45\Microsoft.AI.ServerTelemetryChannel.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AI.Web, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.Web.2.4.0-beta2\lib\net45\Microsoft.AI.Web.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AI.WindowsServer, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.WindowsServer.2.4.0-beta2\lib\net45\Microsoft.AI.WindowsServer.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.ApplicationInsights, Version=2.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.ApplicationInsights.2.4.0-beta2\lib\net45\Microsoft.ApplicationInsights.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.AspNet.TelemetryCorrelation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\Microsoft.AspNet.TelemetryCorrelation.1.0.0-preview1-10414-01\lib\net45\Microsoft.AspNet.TelemetryCorrelation.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Diagnostics.DiagnosticSource, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\System.Diagnostics.DiagnosticSource.4.4.0-preview1-25214-03\lib\net45\System.Diagnostics.DiagnosticSource.dll</HintPath>
    </Reference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- This target runs after build to guarantee that all dependent files have already been copied to output directory. -->
  <Target Name="BuildNugetPackage" AfterTargets="Build">
    <Error Condition="!Exists('$(PackageVersionFile)')" Text="PackageVersionFile must be a valid path to a .dll file that defines NuGet package version information." />
    <!-- Extract package properties from the .dll file -->
    <GetFileVersionInfo File="$(PackageVersionFile)">
      <Output TaskParameter="VersionInfo" ItemName="VersionInfo" />
    </GetFileVersionInfo>
    <PropertyGroup>
      <PackageVersion>@(VersionInfo->'%(FileMajorPart)').@(VersionInfo->'%(FileMinorPart)').@(VersionInfo->'%(FileBuildPart)')</PackageVersion>
      <PackageVersion Condition="'$(PreReleaseMilestone)' != ''">$(PackageVersion)-$(PreReleaseMilestone)</PackageVersion>
      <PackageVersion Condition="'$(StableRelease)' != 'True'">$(PackageVersion)-build@(VersionInfo->'%(FilePrivatePart)')</PackageVersion>
      <PackageCopyright>@(VersionInfo->'%(LegalCopyright)')</PackageCopyright>
      <PackageCommand>..\..\.nuget\NuGet.exe pack "$(PackageSpecFile)" -Properties "version=$(PackageVersion);" -BasePath "$(OutputPath) "</PackageCommand>
    </PropertyGroup>
    <!-- Generate .nupkg file -->
    <Exec Command="$(PackageCommand)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>
  <UsingTask TaskName="GetFileVersionInfo" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <File ParameterType="System.String" Required="true" />
      <VersionInfo ParameterType="Microsoft.Build.Framework.ITaskItem" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Diagnostics" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          FileVersionInfo versionInfo = FileVersionInfo.GetVersionInfo(this.File);
          this.VersionInfo = new TaskItem(this.File);
          this.VersionInfo.SetMetadata("Comments", versionInfo.Comments);
          this.VersionInfo.SetMetadata("CompanyName", versionInfo.CompanyName);
          this.VersionInfo.SetMetadata("FileMajorPart", versionInfo.FileMajorPart.ToString());          
          this.VersionInfo.SetMetadata("FileMinorPart", versionInfo.FileMinorPart.ToString());          
          this.VersionInfo.SetMetadata("FileBuildPart", versionInfo.FileBuildPart.ToString()); 
          this.VersionInfo.SetMetadata("FilePrivatePart", versionInfo.FilePrivatePart.ToString().PadLeft(5,'0'));         
          this.VersionInfo.SetMetadata("LegalCopyright", versionInfo.LegalCopyright);
          this.VersionInfo.SetMetadata("ProductName", versionInfo.ProductName);
        ]]></Code>
    </Task>
  </UsingTask>
</Project>